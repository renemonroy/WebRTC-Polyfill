!function(a){"use strict";var c=function(a){this.init.apply(this,a)};c.prototype={constructor:c,stunServer:null,mediaEl:null,init:function(a){for(var b in a)this[b]=a[b];this._setRTC(navigator||null),this.stunServer||console.log("STUN missed, Mozilla requires ip.")},_setRTC:function(a){return a.getUserMedia?_configStd(a):a.webkitGetUserMedia?_configWebkit(a):a.mozGetUserMedia?_configMozilla(a):(console.log("WebRTC is not supported."),this.isSupported=!1),this},_configStd:function(a){var b=this;return this.connectStreamToSrc=function(a){b.mediaEl.srcObject=a,b.mediaEl.play()},this.RTCPeerConnection=RTCPeerConnection,this.RTCSessionDescription=RTCSessionDescription,this.getUserMedia=a.getUserMedia.bind(a),this.isSupported=!0,this},_configWebkit:function(a){var b=this;return this.connectStreamToSrc=function(a){b.mediaEl.src=webkitURL.createObjectURL(a)},this.RTCPeerConnection=webkitRTCPeerConnection,this.RTCSessionDescription=RTCSessionDescription,this.getUserMedia=a.webkitGetUserMedia.bind(a),this.isSupported=!0,this},_configMozilla:function(a){var b=this;return this.connectStreamToSrc=function(a){b.mediaEl.mozSrcObject=a,b.mediaEl.play()},this.RTCPeerConnection=mozRTCPeerConnection,this.RTCSessionDescription=mozRTCSessionDescription,this.getUserMedia=a.mozGetUserMedia.bind(a),this.isSupported=!0,this}},a.PolyWebRTC=c}(window,document);